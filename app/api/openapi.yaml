openapi: 3.1.1
info:
  title: AICodeMentor API
  version: 1.0.0
  description: |
    RESTful API for AICodeMentor, enabling file management and workflow execution
    within the AI Code Mentor runtime environment.
  contact:
    name: Bernhard Wallisch
    url: https://github.com/BernLeWal/AICodeMentor

servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    FilePathParam:
      name: filepath
      in: path
      description: Relative path to the file within the workflow directory.
      required: true
      schema:
        type: string
    SubdirParam:
      name: subdir
      in: path
      description: Relative path to the subdirectory within the workflow directory.
      required: true
      schema:
        type: string

  schemas:
    FileItem:
      type: object
      properties:
        name:
          type: string
          description: Name of the file or directory.
        path:
          type: string
          description: Relative path within the workflow directory.
        type:
          type: string
          enum: [file, directory]
          description: Type of the item.
      required:
        - name
        - path
        - type

    FileList:
      type: array
      items:
        $ref: '#/components/schemas/FileItem'

    WorkflowExecutionResult:
      type: object
      properties:
        output:
          type: string
          description: Textual output from the workflow execution.
        status:
          type: string
          enum: [success, failure]
          description: Execution status.
        logs:
          type: array
          items:
            type: string
          description: Execution logs.
      required:
        - output
        - status

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message.
      required:
        - error

paths:
  /api/files:
    get:
      summary: List all files and subdirectories in the workflow directory.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of files and directories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/files/{filepath}:
    get:
      summary: Download a specific file.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
      responses:
        '200':
          description: File content.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Upload a new file.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: File uploaded successfully.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Replace an existing file.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: File replaced successfully.
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a specific file.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
      responses:
        '200':
          description: File deleted successfully.
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/files/{subdir}/:
    get:
      summary: List all files in a specific subdirectory.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SubdirParam'
      responses:
        '200':
          description: A list of files in the subdirectory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        '404':
          description: Subdirectory not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new subdirectory.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SubdirParam'
      responses:
        '201':
          description: Subdirectory created successfully.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a specific subdirectory.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SubdirParam'
      responses:
        '200':
          description: Subdirectory deleted successfully.
        '404':
          description: Subdirectory not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/workflow/{filepath}:
    get:
      summary: Execute a workflow with query parameters.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
        - name: params
          in: query
          description: Query parameters for the workflow execution.
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: Workflow executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResult'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workflow file not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Execute a workflow with a JSON payload.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/FilePathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON document containing parameters for the workflow execution.
      responses:
        '200':
          description: Workflow executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionResult'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workflow file not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
